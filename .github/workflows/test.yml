name: test

on:
  push:
  pull_request:

env:
  RUSTFLAGS: '--deny=warnings'

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        rust: [stable, nightly]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - name: Cache target
        id: cache-target
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.rust }}-test-target-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --nocapture

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache target
        id: cache-target
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-clippy-target-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache target
        id: cache-target
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-format-target-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache target
        id: cache-target
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-coverage-target-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clean
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          'CARGO_INCREMENTAL': '0'
          'RUSTFLAGS': '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads'
      - uses: actions-rs/grcov@v0.1
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: /tmp/lcov.info
